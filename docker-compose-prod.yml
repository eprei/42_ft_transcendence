version: '3.8'

services:
    webserv:
        container_name: our-prod-nginx
        image: our-nginx-image
        build:
            context: ./nginx/
        ports:
            - '80:80'
        volumes:
            - ./frontend/dist/:/var/www/cosmic-pong
        depends_on:
            - backend
        networks:
            - prod-appnet

    postgres:
        container_name: our-prod-postgresql
        image: postgres:latest
        volumes:
            - prod-data:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        networks:
            - prod-appnet

    backend:
        container_name: our-prod-backend
        image: our-prod-backend-image
        build:
            context: ./backend/
            dockerfile: ./prod.Dockerfile
        working_dir: /app
        volumes:
            - prod-images:/app/profile-images
        environment:
            - DATABASE_URL=${DATABASE_URL}
            - PORT=${PORT}
            - FT_UUID=${PROD_FT_UUID}
            - FT_SECRET=${PROD_FT_SECRET}
            - URL_BACKEND=http://${HOSTNAME}
            - URL_FRONTEND=http://${HOSTNAME}
        depends_on:
            - postgres
        networks:
            - prod-appnet

volumes:
    prod-data:
      name: our-prod-volume
    prod-images:
      name: our-prod-images

networks:
    prod-appnet:
